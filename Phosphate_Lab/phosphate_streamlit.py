# -*- coding: utf-8 -*-
"""Phosphate_streamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gpQPxAXqKR0uCvPBKdeBaMuLDEH_cNOH
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

# Title of the application
st.title("Visualization of Phosphorus Movement in Loess Soil")

st.write("""
This application illustrates the dynamics of phosphorus movement in loess soil based on experimental results.
It allows you to interactively explore the data, analyze phosphorus concentrations at different distances, and compare treatments over time.
""")

# Create the dataset
data = {
    'Cuvette Number': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
    'Treatment': ['P+1']*12 + ['P-1']*6,
    'Dilution': [1, 2]*9,
    'Reading': [0.782, 1.015, 0.191, 0.482, 0.122, 0.292, 0.837, 1.16, 0.123, 0.285, 0.107, 0.262,
                0.261, 0.286, 0.271, 0.251, 0.263, 0.241]
}

# Load the data into a DataFrame
df = pd.DataFrame(data)

# Display the raw data table
st.subheader("Experimental Data Table")
st.dataframe(df)

# Allow selection of treatment for analysis
treatment = st.selectbox("Select Treatment", df['Treatment'].unique())

# Filter data based on treatment
filtered_data = df[df['Treatment'] == treatment]

# Add distance information
distances = [1, 2, 3] * (len(filtered_data) // 3)
filtered_data['Distance (cm)'] = distances

# Plot phosphorus readings vs distance
st.subheader(f"Phosphorus Concentration vs Distance for {treatment}")
fig, ax = plt.subplots()
ax.plot(filtered_data['Distance (cm)'], filtered_data['Reading'], marker='o', linestyle='-', color='b')
ax.set_xlabel("Distance from Application Point (cm)")
ax.set_ylabel("Phosphorus Reading")
ax.set_title(f"Phosphorus Movement - {treatment}")
st.pyplot(fig)

# Quick statistical summary
st.subheader("Quick Analysis")
mean_reading = filtered_data['Reading'].mean()
max_reading = filtered_data['Reading'].max()
st.write(f"**Average Reading for {treatment}:** {mean_reading:.3f}")
st.write(f"**Maximum Reading for {treatment}:** {max_reading:.3f}")

# Additional interaction: Compare Treatments
st.subheader("Compare Treatments")
comparison_df = df.pivot_table(index='Cuvette Number', columns='Treatment', values='Reading')
st.line_chart(comparison_df)

# Conclusion
st.write("""
### Insights:
- The graph shows the dynamics of phosphorus availability at various distances.
- Use the treatment selector to explore the results interactively and compare patterns.
""")

